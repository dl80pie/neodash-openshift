apiVersion: apps/v1
kind: Deployment
metadata:
  name: neodash
  labels:
    app: neodash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: neodash
  template:
    metadata:
      labels:
        app: neodash
    spec:
      containers:
        - name: neodash
          image: harbor.pietschnet.com/library/neodash-openshift:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            timeoutSeconds: 5
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 10
            timeoutSeconds: 5
            periodSeconds: 10
          volumeMounts:
            - name: config-volume
              mountPath: /usr/share/nginx/html/config.json
              subPath: config.json
            - name: style-config-volume
              mountPath: /usr/share/nginx/html/style.config.json
              subPath: style.config.json
      volumes:
        - name: config-volume
          configMap:
            name: neodash-config
            items:
              - key: config.json
                path: config.json
        - name: style-config-volume
          configMap:
            name: neodash-config
            items:
              - key: style.config.json
                path: style.config.json
      securityContext:
        runAsNonRoot: true
